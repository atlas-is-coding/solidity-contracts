{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "depositor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "DepositorAdded",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_description",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_duration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_goalBalance",
						"type": "uint256"
					}
				],
				"name": "createCampaign",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "depositToCampaign",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllCampaigns",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address payable",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "currentBalance",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "goalBalance",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "startTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "endTime",
								"type": "uint256"
							}
						],
						"internalType": "struct CampaignFactory.Campaign[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "getAllDepositsById",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address payable",
								"name": "addr",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "balance",
								"type": "uint256"
							}
						],
						"internalType": "struct DepositorFactory.Depositor[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCommision",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "getDepositsCountById",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_newCommision",
						"type": "uint8"
					}
				],
				"name": "setCommision",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "withdrawFromCampaign",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/1_Crowdfunding.sol": "Crowdfunding"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/1_Crowdfunding.sol": {
			"keccak256": "0x53ea40978b4475b7e983807d6e33f701481e0374df578688b6c460a7b2e9b8b1",
			"license": "MIT",
			"urls": [
				"bzz-raw://b8dc514712abe8d0e8816a4e00ae5c05ee590af136dde82d59f260b306388cbb",
				"dweb:/ipfs/Qma1mHNksw2fHYPDtCBuFCDGBa4WmFU7rYLwjdzK9vNDrS"
			]
		}
	},
	"version": 1
}